name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.repository_owner == 'macalinao'

    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Cache JS dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules/
            ~/.bun/
            .turbo/
          key: turbo-${{ runner.os }}-bun-${{ hashFiles('turbo.json', '**/bun.lock') }}
          restore-keys: |
            turbo-${{ runner.os }}-bun-

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build

      - name: Setup NPM authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: bun run ci:publish
          version: bun run ci:version
          commit: "chore: release packages"
          title: "chore: release packages"
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send notification on release
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "Published packages:"
          echo "${{ steps.changesets.outputs.publishedPackages }}"
